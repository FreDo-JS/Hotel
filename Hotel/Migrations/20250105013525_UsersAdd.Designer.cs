// <auto-generated />
using System;
using Hotel.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hotel.Migrations
{
    [DbContext(typeof(HotelDbContext))]
    [Migration("20250105013525_UsersAdd")]
    partial class UsersAdd
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Hotel.Data.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("QRCode")
                        .HasColumnType("longtext");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CheckInDate = new DateTime(2025, 1, 2, 2, 35, 24, 744, DateTimeKind.Local).AddTicks(1086),
                            CheckOutDate = new DateTime(2025, 1, 9, 2, 35, 24, 744, DateTimeKind.Local).AddTicks(1089),
                            CreatedAt = new DateTime(2025, 1, 5, 2, 35, 24, 744, DateTimeKind.Local).AddTicks(1080),
                            LastName = "Kowalski",
                            QRCode = "821928da892d",
                            RoomId = 3,
                            Status = "potwierdzona",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Hotel.Data.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.Property<int?>("ResidentId")
                        .HasColumnType("int");

                    b.Property<int?>("RoomNumber")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ResidentId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Floor = 1,
                            RoomNumber = 101,
                            Status = "wolny"
                        },
                        new
                        {
                            Id = 2,
                            Floor = 1,
                            RoomNumber = 102,
                            Status = "wolny"
                        },
                        new
                        {
                            Id = 3,
                            Floor = 1,
                            RoomNumber = 103,
                            Status = "wolny"
                        },
                        new
                        {
                            Id = 4,
                            Floor = 1,
                            RoomNumber = 104,
                            Status = "wolny"
                        },
                        new
                        {
                            Id = 5,
                            Floor = 1,
                            RoomNumber = 105,
                            Status = "wolny"
                        },
                        new
                        {
                            Id = 6,
                            Floor = 2,
                            RoomNumber = 201,
                            Status = "wolny"
                        },
                        new
                        {
                            Id = 7,
                            Floor = 2,
                            RoomNumber = 202,
                            Status = "wolny"
                        },
                        new
                        {
                            Id = 8,
                            Floor = 2,
                            RoomNumber = 203,
                            Status = "wolny"
                        },
                        new
                        {
                            Id = 9,
                            Floor = 2,
                            RoomNumber = 204,
                            Status = "wolny"
                        },
                        new
                        {
                            Id = 10,
                            Floor = 3,
                            RoomNumber = 301,
                            Status = "wolny"
                        },
                        new
                        {
                            Id = 11,
                            Floor = 3,
                            RoomNumber = 302,
                            Status = "wolny"
                        },
                        new
                        {
                            Id = 12,
                            Floor = 3,
                            RoomNumber = 303,
                            Status = "wolny"
                        },
                        new
                        {
                            Id = 13,
                            Floor = 3,
                            RoomNumber = 304,
                            Status = "wolny"
                        });
                });

            modelBuilder.Entity("Hotel.Data.RoomStatistic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CurrentOccupancy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastCleaned")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<int>("TotalReservations")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomStatistics");
                });

            modelBuilder.Entity("Hotel.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FirebaseUid")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 1, 5, 2, 35, 24, 744, DateTimeKind.Local).AddTicks(815),
                            Email = "j4n.k0wal4kisac1k@gmail.com",
                            FirebaseUid = "kasd782m2akd8922s",
                            Name = "Jan Kowalski",
                            Role = "rezydent"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 1, 5, 2, 35, 24, 744, DateTimeKind.Local).AddTicks(859),
                            Email = "4nn4l3wa9s1lsp9smki@gmail.com",
                            FirebaseUid = "d7j89s12mdm12",
                            Name = "Anna Lewandowska",
                            Role = "rezydent"
                        });
                });

            modelBuilder.Entity("Hotel.Data.Reservation", b =>
                {
                    b.HasOne("Hotel.Data.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId");

                    b.HasOne("Hotel.Data.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Hotel.Data.Room", b =>
                {
                    b.HasOne("Hotel.Data.User", "Resident")
                        .WithMany()
                        .HasForeignKey("ResidentId");

                    b.Navigation("Resident");
                });

            modelBuilder.Entity("Hotel.Data.RoomStatistic", b =>
                {
                    b.HasOne("Hotel.Data.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });
#pragma warning restore 612, 618
        }
    }
}
